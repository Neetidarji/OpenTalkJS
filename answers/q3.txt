**API Documentation**

**Overview**

This is a sample API documentation for a simple e-commerce application. The API provides endpoints for creating, reading, updating, and deleting products, as well as managing user accounts.

**Endpoints**

### Products

#### `GET /products`

* **Description:** Retrieves a list of all products.
* **Method:** GET
* **Response:**
	+ `200 OK`: An array of product objects.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

#### `GET /products/:id`

* **Description:** Retrieves a single product by its ID.
* **Method:** GET
* **Response:**
	+ `200 OK`: A single product object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

#### `POST /products`

* **Description:** Creates a new product.
* **Method:** POST
* **Request Body:**
	+ `Product` object (JSON)
* **Response:**
	+ `201 Created`: A newly created product object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### Users

#### `GET /users`

* **Description:** Retrieves a list of all users.
* **Method:** GET
* **Response:**
	+ `200 OK`: An array of user objects.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

#### `GET /users/:id`

* **Description:** Retrieves a single user by its ID.
* **Method:** GET
* **Response:**
	+ `200 OK`: A single user object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

#### `POST /users`

* **Description:** Creates a new user.
* **Method:** POST
* **Request Body:**
	+ `User` object (JSON)
* **Response:**
	+ `201 Created`: A newly created user object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### Products by Category

#### `GET /products/category/:category`

* **Description:** Retrieves a list of products for the specified category.
* **Method:** GET
* **Response:**
	+ `200 OK`: An array of product objects.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### Users by Email

#### `GET /users/email/:email`

* **Description:** Retrieves a list of users with the specified email address.
* **Method:** GET
* **Response:**
	+ `200 OK`: An array of user objects.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### Users by ID

#### `GET /users/:id`

* **Description:** Retrieves a single user by its ID.
* **Method:** GET
* **Response:**
	+ `200 OK`: A single user object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### User Profiles

#### `GET /users/profile/:id`

* **Description:** Retrieves a user's profile information by their ID.
* **Method:** GET
* **Response:**
	+ `200 OK`: A single user object with profile information.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### User Accounts

#### `POST /users/account`

* **Description:** Creates a new user account.
* **Method:** POST
* **Request Body:**
	+ `User` object (JSON)
* **Response:**
	+ `201 Created`: A newly created user object with an active email address.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `409 Conflict`: An existing account with the same email address already exists.

### Product Searches

#### `GET /products/search`

* **Description:** Retrieves a list of products that match the specified search criteria.
* **Method:** GET
* **Response:**
	+ `200 OK`: An array of product objects matching the search query.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

### Product Ratings

#### `POST /products/rate`

* **Description:** Updates a product's rating by the specified ID.
* **Method:** POST
* **Request Body:**
	+ `Rating` object (JSON)
* **Response:**
	+ `201 Created`: A newly created or updated product rating object.
	+ `400 Bad Request`: The request was invalid or missing required parameters.
	+ `404 Not Found`: The requested resource is not found.

**Error Handling**

All API requests will return a response with a standardized error message and HTTP status code. Errors can be categorized as follows:

* `200 OK`: Successful operation
* `400 Bad Request`: Invalid request data, missing required parameters, or unsupported request methods
* `404 Not Found`: The requested resource is not found
* `409 Conflict`: An existing account with the same email address already exists

**Request Parameters**

The following request parameters are supported:

* `Authorization`: Required for authentication. Can be an API key or OAuth token.
* `Content-Type`: Optional, but recommended for JSON data
* `Accept`: Optional, but recommended for specifying acceptable formats (e.g., application/json)
* `User-Agent`: Optional, but recommended for specifying custom user agent

**Response Formats**

The following response formats are supported:

* `application/json`
* `text/plain`

**API Key Generation**

To generate an API key, simply register a new account on the server and follow these steps:

1. Go to [Account Management](/account-management) to create an account.
2. Once your account is created, go to [API Keys](/api-keys) to generate a new API key.

**Security Notes**

This API uses HTTPS encryption for all requests and responses. All data transmitted between the client and server is stored securely using secure socket layer (SSL) certificates.